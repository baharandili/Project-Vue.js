{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \" Tutor dek if else \", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \" \",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]]), _createElementVNode(\"h3\", null, _toDisplayString($data.name), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","type","placeholder","_cache","$event","$data","name","_toDisplayString"],"sources":["D:\\CodingApp\\vue\\post\\src\\components\\ifelse.vue"],"sourcesContent":["<template>\r\n    <h1>\r\n        Tutor dek if else\r\n    </h1>\r\n    <input type=\"text\" placeholder=\" \" v-model=\"name\" />\r\n    <h3>{{ name }}</h3>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"ifElse\",\r\n    data() {\r\n        return {\r\n            name: this.name,\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n<style>\r\nh1 {\r\n    color: rgb(red, green, blue)\r\n}\r\n</style>"],"mappings":";gCACIA,mBAAA,CAEK,YAFD,qBAEJ;;uBAHJC,mBAAA,CAAAC,SAAA,SACIC,UAEK,E,gBACLH,mBAAA,CAAoD;IAA7CI,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,GAAG;IAJtC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIgDC,KAAA,CAAAC,IAAI,GAAAF,MAAA;iDAAJC,KAAA,CAAAC,IAAI,E,GAChDT,mBAAA,CAAmB,YAAAU,gBAAA,CAAZF,KAAA,CAAAC,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}